/*
Auto-generated by: https://github.com/pmndrs/gltfjsx
Command: npx gltfjsx@6.2.15 public/models/small_show_room.glb 
Author: MRowa (https://sketchfab.com/MRowa)
License: CC-BY-SA-4.0 (http://creativecommons.org/licenses/by-sa/4.0/)
Source: https://sketchfab.com/3d-models/small-show-room-4d78ad2c044d417fa34e41a179134edc
Title: Small Show Room
*/

import React, { useRef,useState ,useEffect} from 'react'
import { useGLTF} from '@react-three/drei'
import { useFrame } from 'react-three-fiber';

export function Third_section_model(props) {
  const { nodes, materials } = useGLTF('./models/small_show_room.glb')
  const scale= 0.5 ;
  const rotation=[-0.09,props.rotationY,0];
  const position =[0.1,-2.2,-1];
  const groupRef = useRef();
  const [currentRotationY, setCurrentRotationY] = useState(0);
  const [isRotating, setIsRotating] = useState(false);
  useEffect(() => {
    if (props.rotationY !== currentRotationY) {
      setIsRotating(true);
      setCurrentRotationY(props.rotationY);
    }
  }, [props.rotationY, currentRotationY]);

  useFrame(() => {
    if (isRotating) {
      const targetRotationY = props.rotationY;
      const delta = targetRotationY - currentRotationY;
      const step = 5; // Adjust the step for smoother or faster rotation

      if (Math.abs(delta) > step) {
        setCurrentRotationY(currentRotationY + step * Math.sign(delta));
      } else {
        setCurrentRotationY(targetRotationY);
        setIsRotating(false);
      }

      groupRef.current.rotation.y = currentRotationY;
    }
  });

 
  return (
    <group {...props}  ref={groupRef} dispose={null} scale={[scale,scale,scale]} position={position} rotation={rotation}>
      <mesh geometry={nodes.SmallShowRoom_Placeable_0.geometry} material={materials.Placeable} rotation={[-Math.PI / 2, 0, 0]} />
    </group>
  )
}

useGLTF.preload('./models/small_show_room.glb')

